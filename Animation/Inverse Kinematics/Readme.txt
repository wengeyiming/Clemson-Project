a) The functionality of my work: The project I implement has these function: Users can use left,right,up,down on the keyboard to move the cube Users can press key 'i' to control the joint's rotation and implement the inverse kinematic effect. The algorithm used in the project is Jacobian matrix which can be found on course's pdf.

b) My implementation: Since the key algorithm can be found on the InverseKinematics.pdf, the only thing I need to do is to design a matrix class with matrix's transposition and inverse calculation so that I can use this matrix class to implement the IK algorithm. I found a completed matrix class on the website and I pointed out this website in my code. However this class used one dimensional array to save data and its inverse function was wrong.So I changed this matrix's structure to make it work better for my program. Another problem was my code didn't work when the two cubes had length 4 4 or 2 4. I changed their lengths to make it work but I still didn't know why it couldn't work with some specific numbers. I considered some reasons like the determinant values and propotion between two cubes' length but it seemed that they were not the answers. I asked some of my classmates and they all met this problem so I was looking forward to your solution.